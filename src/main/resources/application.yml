server:
  port: 8001

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${DISCOVERY_URL}

spring:
  application:
    name: j-core
  profiles:
    active: local
    #active: deploy
  redis:
    host: ${REDIS_URI}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
  datasource:
    url: jdbc:mysql://${DB_URI}?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    initialization-mode: always #import data
  jackson:
    serialization:
      write-dates-as-timestamps: true
  jpa:
    properties:
      hibernate:
        use_sql_comments: 'true'
        format_sql: 'true'
        show_sql: 'true'
    hibernate:
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: 'create'
      #ddl-auto=none:
    #show-sql: 'true'
    defer-datasource-initialization: 'true' #import data
  web:
    resources:
      static-locations: classpath:/static/
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
      use-trailing-slash-match: true
    view:
      prefix: /WEB-INF/view/
      suffix: .jsp
  jsp:
    cache: 'false'
  devtools:
    restart:
      enabled: 'true'
    livereload:
      enabled: 'true'

logging:
  config: classpath:logback-spring.xml
  level:
    root: info
    org:
      hibernate:
        SQL: warn
        type:
          descriptor:
            sql: warn

#SECRET KEY
jwt:
  secret:
    key: ${JWT_SECRET_KEY}
jasypt:
  encryptor:
    password: ${JASYPT_ENCRYPTOR_PASSWORD}
token:
  access-expired-time : 14400000
  refresh-expired-time : 2629800000